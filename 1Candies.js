// Решение задачи с помощью динамического проагамирования
countWays = (X, Y, Z, W) => {
    /*Массив в котором мы будем перебирать комбинации +1( первый элемент это базовый
    случай от которого мы будем отталкиваться)
    */
    let count = new Array(W + 1).fill(0);
    count[0] = 1;
    // Массив наших чисел, из которых состоят комбинации
    let p = [X, Y, Z];
    //Циклы перебора, соотвественно по массиву чисел и по подсчёту W
    for (let k = 0; k < p.length; ++k) {
        for (let i = 1; i <= W; i++) {
            if (i >= p[k]) {
                //Логирование чтобы понять как работает алгоритм
                console.log(`i ${i}  i-p[k] ${i - p[k]}`);
                count[i] += count[i - p[k]];
                console.log(count.toString())

            }
        }
    }
    // В последний элемент записываются все совпадения, это и будет наш ответ
    return count[W];
};

console.log(countWays(3, 4, 5, 6));

